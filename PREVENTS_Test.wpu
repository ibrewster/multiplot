#!wing
#!version=8.0
##################################################################
# Wing project file : User-specific branch                       #
##################################################################
[user attributes]
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'FX7JbO0AX5g6Y6Mcw6oE8ncZenKayzFJ',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.17784431137724555,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        'c': [],
        'django': [],
        'html': [],
        'py': []}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': '',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '%20',
                                       'fReverse': False,
                                       'fSearchText': 'Not Enough',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [],
                       'filter': '',
                       'recent-filters': None,
                       'sort-order': 'alpha',
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 3781,
                       'folded-linenos': [],
                       'history': {'file:/Users/israel/Development/PREVENTS/GraphGen.py': ['for row in cc.iteritems():\n  print(row)\n\n',
        "row['date']\n",
        'row\n',
        "row['color']\n",
        'row.color\n',
        'row.Index\n',
        'cat\n',
        "cat['magnitudes']\n",
        'numpy.asarray(cat)\n',
        'numpy.asarray(cat[0])\n',
        'numpy.asarray(cat[1])\n',
        'cat[0].magnitudes\n',
        'cat[0].magnitudes[0]\n',
        'cat[:].magnitudes[0]\n',
        'numpy.fromiter((event.magnitudes[0].mag for event in cat))\n',
        'numpy.fromiter((event.magnitudes[0].mag for event in cat), float)\n',
        'numpy.asarray((event.magnitudes[0].mag for event in cat), float)\n',
        'numpy.asarray((event.magnitudes[0].mag for event in cat), dtype = float)\n',
        'numpy.asarray((event.magnitudes[0].mag for event in cat))\n',
        'numpy.asarray([event.magnitudes[0].mag for event in cat])\n',
        '[event.magnitudes[0].mag for event in cat]\n',
        '[event.magnitudes[0].mag for event in cat if event.magnitudes]\n',
        'cat[0]\n',
        'event = cat[0]\n',
        'list(event.items())\n',
        'dates = [event.origins[0].time for event in cat if event.magnitudes]\n',
        'mags = [event.magnitudes[0].mag for event in cat if event.magnitudes]\n',
        'len(dates)\n',
        'len(mags)\n',
        'pandas.DataFrame(cat)\n',
        'df = pandas.DataFrame(cat)\n',
        'df.columns\n',
        "df['magnitudes']\n",
        'data = numpy.asarray([(event.origins[0].time,event.magnitudes[0].mag) for event in cat if\n                            event.magnitudes]).T\n\n',
        'pandas.DataFrame(data)\n',
        'data = numpy.asarray([(event.origins[0].time, event.magnitudes[0].mag) for event in cat if\n                      event.magnitudes])\n\n',
        'pandas.DataFrame(data, columns = ["Date", "Magnitude"])\n',
        'pandas.DataFrame([(event.origins[0].time, event.magnitudes[0].mag) for event in cat if\n                      event.magnitudes]\n, columns = ["Date", "Magnitude"])\n',
        'for event in cat[:5]:\n  print(event.depth)\n\n',
        'for event in cat[:5]:\n  print(list(event.keys()) )\n\n',
        'for event in cat[:5]:\n  print(event.origins[0].depth)\n\n',
        'for event in cat[:5]:\n  print(event.comments)\n\n',
        'data = pandas.DataFrame([(event.origins[0].time,\n                          event.magnitudes[0].mag,\n                          event.origins[0].depth,\n                          event.comments)\n                         for event in cat if\n                         event.magnitudes],\n                        columns = ["Date", "Magnitude", "Depth", "Comments"])\n\n',
        "data['Comments']\n",
        "data['Comments'][0]\n",
        "data['Comments'][0][5]\n",
        "data['Comments'][0][2]\n",
        "data['Comments'][0][3]\n",
        "data['Comments'][0][4]\n",
        "data['Comments'][0][4].text\n",
        "data['Comments'][1][4].text\n",
        'data = pandas.DataFrame([(event.origins[0].time,\n                              event.magnitudes[0].mag,\n                              event.origins[0].depth,\n                              event.comments[4].text)\n                             for event in cat if\n                             event.magnitudes],\n                            columns = ["Date", "Magnitude", "Depth", "Comments"])\n\n',
        'data = pandas.DataFrame([(event.origins[0].time,\n                              event.magnitudes[0].mag,\n                              event.origins[0].depth,\n                              event.comments[4].text.split("=")[1])\n                             for event in cat if\n                             event.magnitudes],\n                            columns = ["Date", "Magnitude", "Depth", "Comments"])\n\n',
        'data\n',
        'plot_data\n',
        'plot_data[0]\n',
        'plot_data = cc + [magPlot, depthPlot, FIPlot]\n',
        'plot_data = cc + (magPlot, depthPlot, FIPlot)\n',
        "fig = go.Figure(data = plot_data,\n                    layout = {\n                        'height': 1700,\n                        'showlegend': False,\n                        'yaxis': {\n                            'autorange': False,\n                            'range': [0, 1],\n                            'fixedrange': True,\n                            'showticklabels': False,\n                            'domain': [.81, .93]\n                        },\n                        'yaxis2': {\n                            'domain': [.54, .8],\n                        },\n                        'yaxis3': {\n                            'domain': [.27, .53],\n                        },\n                        'yaxis4': {\n                            'domain': [0, .26],\n                        },\n                    })\n\n",
        'fig.show()\n',
        'cat[0].origins[0]\n',
        "go.Scattermapbox(lon = data['longitude'], lat = data['latitude'], mode = 'markers',\n                            marker = {\n        'color': data.index,\n        'colorscale': 'Reds',\n    }\n    )\n\n",
        'data.reset_index(inplace = True)\n',
        'data.index\n',
        'data.index.tolist\n',
        'data.index.tolist()\n',
        'cc\n',
        'type(cc)\n',
        'type(so2)\n',
        'type(aster)\n',
        'type(quakes)\n',
        'so2\n',
        'len(so2)\n',
        "so2[0]['yaxis'] = 'y2'\n",
        'so2[0]\n',
        "df['Date']\n",
        'import math\n',
        'math.isnan(time)\n',
        'df\n',
        'df[date]\n',
        "df['date']\n"]},
                       'launch-id': None,
                       'sel-line': 3804,
                       'sel-line-start': 446508,
                       'selection_end': 446508,
                       'selection_start': 446508,
                       'zoom': 0}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [('eval',
        'self.chartready'),
                                       ('symbolic',
        ['from_date']),
                                       ('symbolic',
        ['from_date'])],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [(0,)],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 659,
                       'folded-linenos': [],
                       'history': {None: ['import pandas\n',
        "data = (('2008-10-03 19:37:15', 'GREEN'), ('2008-11-05 23:52:26', 'YELLOW'), ('2009-01-25 11:09:57', 'ORANGE'), ('2009-03-10 18:56:59', 'YELLOW'), ('2009-03-15 23:50:14', 'ORANGE'), ('2009-03-18 18:41:36', 'YELLOW'), ('2009-03-22 07:09:44', 'ORANGE'), ('2009-03-23 07:56:25', 'RED'), ('2009-03-25 22:35:06', 'ORANGE'), ('2009-03-26 17:56:56', 'RED'), ('2009-04-03 20:44:52', 'ORANGE'), ('2009-04-04 15:35:41', 'RED'), ('2009-04-04 15:51:43', 'RED'), ('2009-04-06 23:55:36', 'ORANGE'), ('2009-06-30 19:20:03', 'YELLOW'), ('2009-09-29 19:44:52', 'GREEN'), ('2009-12-28 18:53:11', 'YELLOW'), ('2010-01-06 00:32:11', 'GREEN'), ('2010-04-05 19:59:33', 'YELLOW'), ('2010-04-12 21:10:51', 'GREEN'))\n",
        'pandas.DataFrame(data, columns = ["x", \'Y\'])\n',
        'df = pandas.DataFrame(data, columns = ["x", "y"])\n',
        'pandas.options.plotting.backedn = "plotly"\n',
        'pandas.options.plotting.backend = "plotly"\n',
        'df.plot()\n',
        'fig = df.plot()\n',
        'fig.show()\n',
        'df = pandas.DataFrame(data, index = "date", columns = ["date", "color"])\n',
        'df = pandas.DataFrame(data, index = ["date"], columns = ["date", "color"])\n',
        'df = pandas.DataFrame(data, index = [0], columns = ["date", "color"])\n',
        'df = pandas.DataFrame(data, columns = ["date", "color"])\n',
        "df.set_index('date')\n",
        'df.index\n',
        'import plotly.graph_objects as go\n',
        'go.Figure(layout = go.layout.Geo())\n',
        'go.layout.Geo()\n',
        'go.layout.Geo\n',
        'test = go.layout.Geo\n',
        'from datetime import datetime\n',
        "test = '3/5/19 21:32'\n",
        'datetime.strptime(test, "%m/%d/%y %H:%M")\n']},
                       'launch-id': None,
                       'sel-line': 683,
                       'sel-line-start': 35673,
                       'selection_end': 35673,
                       'selection_start': 35673,
                       'zoom': 0}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ('horizontal',
        0.5413568773234201,
        ({'bookmarks': ([[loc('lib/python3.10/site-packages/pandas/core/indexes/base.py'),
                          {'attrib-starts': [('Index|0|',
        260),
        ('Index|0|.__new__|0|',
         396)],
                           'code-line': '            raise cls._scalar_data_error(data)\n',
                           'first-line': 443,
                           'folded-linenos': [],
                           'sel-line': 507,
                           'sel-line-start': 15128,
                           'selection_end': 15128,
                           'selection_start': 15128,
                           'zoom': 0},
                          1647366059.592735],
                         [loc('lib/python3.10/site-packages/pandas/core/indexes/base.py'),
                          {'attrib-starts': [('Index|0|',
        260),
        ('Index|0|.get_loc|0|',
         3576)],
                           'code-line': '                raise KeyError(key) from err\n',
                           'first-line': 3558,
                           'folded-linenos': [],
                           'sel-line': 3622,
                           'sel-line-start': 117166,
                           'selection_end': 117166,
                           'selection_start': 117166,
                           'zoom': 0},
                          1647366072.5074198],
                         [loc('GraphGen.py'),
                          {'attrib-starts': [('plot_quakes|0|',
        128)],
                           'code-line': "                             'colorscale': 'Reds',\n",
                           'first-line': 122,
                           'folded-linenos': [],
                           'sel-line': 184,
                           'sel-line-start': 6292,
                           'selection_end': 6341,
                           'selection_start': 6341,
                           'zoom': 0},
                          1647366253.106038],
                         [loc('lib/python3.10/site-packages/_plotly_utils/basevalidators.py'),
                          {'attrib-starts': [('BaseValidator|0|',
        228),
        ('BaseValidator|0|.raise_invalid_val|0|',
         266)],
                           'code-line': '\n',
                           'first-line': 283,
                           'folded-linenos': [],
                           'sel-line': 292,
                           'sel-line-start': 9389,
                           'selection_end': 9389,
                           'selection_start': 9389,
                           'zoom': 0},
                          1647366263.361374],
                         [loc('GraphGen.py'),
                          {'attrib-starts': [('plot_quakes|0|',
        128)],
                           'code-line': '\n',
                           'first-line': 140,
                           'folded-linenos': [],
                           'sel-line': 145,
                           'sel-line-start': 4677,
                           'selection_end': 4677,
                           'selection_start': 4677,
                           'zoom': 0},
                          1647376290.758414],
                         [loc('GraphGen.py'),
                          {'attrib-starts': [('plot_multi|0|',
        209)],
                           'code-line': '                            \'title\': "Magnitude",\n',
                           'first-line': 181,
                           'folded-linenos': [],
                           'sel-line': 233,
                           'sel-line-start': 7997,
                           'selection_end': 8044,
                           'selection_start': 8035,
                           'zoom': 0},
                          1647376708.769865],
                         [loc('GraphGen.py'),
                          {'attrib-starts': [('plot_so2|0|',
        107)],
                           'code-line': '    fig2 = df.plot(x = "date", y = "OMI ER (t/d)", title = "SO2 Emission Rate")\n',
                           'first-line': 63,
                           'folded-linenos': [],
                           'sel-line': 115,
                           'sel-line-start': 3323,
                           'selection_end': 3371,
                           'selection_start': 3359,
                           'zoom': 0},
                          1647376725.902793],
                         [loc('GraphGen.py'),
                          {'attrib-starts': [('plot_multi|0|',
        209)],
                           'code-line': '                            \'title\': "OMI ER (t/d)",\n',
                           'first-line': 180,
                           'folded-linenos': [],
                           'sel-line': 233,
                           'sel-line-start': 7997,
                           'selection_end': 8047,
                           'selection_start': 8047,
                           'zoom': 0},
                          1647376735.7610922],
                         [loc('GraphGen.py'),
                          {'attrib-starts': [('plot_aster|0|',
        120)],
                           'code-line': "    fig = df.plot(x = 'date', y = 'deltaT', title = 'Max temperature minus background mean')\n",
                           'first-line': 99,
                           'folded-linenos': [],
                           'sel-line': 123,
                           'sel-line-start': 3553,
                           'selection_end': 3643,
                           'selection_start': 3606,
                           'zoom': 0},
                          1647376752.321341],
                         [loc('GraphGen.py'),
                          {'attrib-starts': [('plot_multi|0|',
        209)],
                           'code-line': '                        },\n',
                           'first-line': 135,
                           'folded-linenos': [],
                           'sel-line': 242,
                           'sel-line-start': 8371,
                           'selection_end': 8382,
                           'selection_start': 8382,
                           'zoom': 0},
                          1647376918.765892],
                         [loc('GraphGen.py'),
                          {'attrib-starts': [('plot_multi|0|',
        209)],
                           'code-line': '    so2 = plot_so2()\n',
                           'first-line': 179,
                           'folded-linenos': [],
                           'sel-line': 211,
                           'sel-line-start': 7211,
                           'selection_end': 7231,
                           'selection_start': 7231,
                           'zoom': 0},
                          1647377447.688489],
                         [loc('GraphGen.py'),
                          {'attrib-starts': [('plot_quakes|0|',
        130)],
                           'code-line': '    FIPlot = go.Scatter(x = data["Date"], y = data["FI"], yaxis = \'y4\', mode = "markers")\n',
                           'first-line': 44,
                           'folded-linenos': [],
                           'sel-line': 152,
                           'sel-line-start': 4932,
                           'selection_end': 5001,
                           'selection_start': 4990,
                           'zoom': 0},
                          1647377595.785572],
                         [loc('GraphGen.py'),
                          {'attrib-starts': [('plot_quakes|0|',
        130)],
                           'code-line': '\n',
                           'first-line': 188,
                           'folded-linenos': [],
                           'sel-line': 207,
                           'sel-line-start': 7155,
                           'selection_end': 7155,
                           'selection_start': 7155,
                           'zoom': 0},
                          1647378113.243592],
                         [loc('GraphGen.py'),
                          {'attrib-starts': [('plot_so2|0|',
        107)],
                           'code-line': "    df['str_date'] = df['Date'].dt.strftime('%Y-%m-%dT%H:%m%s')\n",
                           'first-line': 79,
                           'folded-linenos': [],
                           'sel-line': 110,
                           'sel-line-start': 3188,
                           'selection_end': 3188,
                           'selection_start': 3188,
                           'zoom': 0},
                          1647378395.4462762],
                         [loc('lib/python3.10/site-packages/pandas/core/indexes/base.py'),
                          {'attrib-starts': [('Index|0|',
        260),
        ('Index|0|.get_loc|0|',
         3576)],
                           'code-line': '            * nearest: use the NEAREST index value if no exact match. Tied\n',
                           'first-line': 3570,
                           'folded-linenos': [],
                           'sel-line': 3587,
                           'sel-line-start': 115856,
                           'selection_end': 115930,
                           'selection_start': 115930,
                           'zoom': 0},
                          1647378404.869935],
                         [loc('GraphGen.py'),
                          {'attrib-starts': [('plot_so2|0|',
        107)],
                           'code-line': "    df['str_date'] = df['date'].dt.strftime('%Y-%m-%dT%H:%m%s')\n",
                           'first-line': 79,
                           'folded-linenos': [],
                           'sel-line': 110,
                           'sel-line-start': 3188,
                           'selection_end': 3188,
                           'selection_start': 3188,
                           'zoom': 0},
                          1647378476.933897],
                         [loc('lib/python3.10/site-packages/pandas/core/indexes/accessors.py'),
                          {'attrib-starts': [('PeriodProperties|0|',
        414)],
                           'code-line': '    0    0\n',
                           'first-line': 444,
                           'folded-linenos': [],
                           'sel-line': 451,
                           'sel-line-start': 12941,
                           'selection_end': 12951,
                           'selection_start': 12951,
                           'zoom': 0},
                          1647378527.705222],
                         [loc('GraphGen.py'),
                          {'attrib-starts': [('plot_so2|0|',
        107)],
                           'code-line': '    def date_parser(date, time): return datetime.strptime(date + \' \' + time, "%-m/%-d/%y %H:%M")\n',
                           'first-line': 78,
                           'folded-linenos': [],
                           'sel-line': 109,
                           'sel-line-start': 3107,
                           'selection_end': 3165,
                           'selection_start': 3165,
                           'zoom': 0},
                          1647378783.152113],
                         [loc('../../../../Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/_strptime.py'),
                          {'attrib-starts': [('_calc_julian_from_V|0|',
        292)],
                           'code-line': '    ordinal = (iso_week * 7) + iso_weekday - correction\n',
                           'first-line': 288,
                           'folded-linenos': [],
                           'sel-line': 298,
                           'sel-line-start': 13141,
                           'selection_end': 13171,
                           'selection_start': 13171,
                           'zoom': 0},
                          1647378842.293043],
                         [loc('GraphGen.py'),
                          {'attrib-starts': [('plot_quakes|0|',
        138)],
                           'code-line': '    events_file = "sub_catalog_layer.xml"\n',
                           'first-line': 137,
                           'folded-linenos': [],
                           'sel-line': 139,
                           'sel-line-start': 4134,
                           'selection_end': 4174,
                           'selection_start': 4174,
                           'zoom': 0},
                          1647379964.8021388]],
                        20),
          'current-loc': loc('GraphGen.py'),
          'editor-state-list': [(loc('lib/python3.10/site-packages/pandas/core/arrays/datetimes.py'),
                                 {'attrib-starts': [('objects_to_datetime64ns|0|',
        2150)],
                                  'code-line': '    assert errors in ["raise", "ignore", "coerce"]\n',
                                  'first-line': 2126,
                                  'folded-linenos': [],
                                  'sel-line': 2190,
                                  'sel-line-start': 71716,
                                  'selection_end': 71716,
                                  'selection_start': 71716,
                                  'zoom': 0}),
                                (loc('lib/python3.10/site-packages/pandas/io/date_converters.py'),
                                 {'attrib-starts': [('generic_parser|0|',
        80)],
                                  'code-line': '        results[i] = parse_func(*args)\n',
                                  'first-line': 48,
                                  'folded-linenos': [],
                                  'sel-line': 100,
                                  'sel-line-start': 3117,
                                  'selection_end': 3117,
                                  'selection_start': 3117,
                                  'zoom': 0}),
                                (loc('GraphGen.py'),
                                 {'attrib-starts': [('plot_multi|0|',
        217)],
                                  'code-line': "                            'fixedrange': True,\n",
                                  'first-line': 207,
                                  'folded-linenos': [],
                                  'sel-line': 237,
                                  'sel-line-start': 8040,
                                  'selection_end': 8087,
                                  'selection_start': 8086,
                                  'zoom': 0}),
                                (loc('../../../../Applications/Wing Pro.app/Contents/Resources/updates/8.2.0.0/doc/TOC'),
                                 {'displayed-index': 0,
                                  'viewer-state': {'history': [-1,
        0],
        'history-pos': 1,
        'index': 0,
        'top': 0,
        'top-left-pos': 0}}),
                                (loc('../../Downloads/plot_redoubtAZ.py'),
                                 {'attrib-starts': [],
                                  'code-line': 'import numpy as np\n',
                                  'first-line': 0,
                                  'folded-linenos': [],
                                  'sel-line': 0,
                                  'sel-line-start': 0,
                                  'selection_end': 0,
                                  'selection_start': 0,
                                  'zoom': 0}),
                                (loc('requriements.txt'),
                                 {'attrib-starts': [],
                                  'code-line': '',
                                  'first-line': 0,
                                  'folded-linenos': [],
                                  'sel-line': 6,
                                  'sel-line-start': 53,
                                  'selection_end': 53,
                                  'selection_start': 53,
                                  'zoom': 0})],
          'has-focus': True,
          'locked': False},
         [loc('lib/python3.10/site-packages/pandas/core/arrays/datetimes.py'),
          loc('lib/python3.10/site-packages/pandas/io/date_converters.py'),
          loc('GraphGen.py'),
          loc('../../../../Applications/Wing Pro.app/Contents/Resources/updates/8.2.0.0/doc/TOC'),
          loc('../../Downloads/plot_redoubtAZ.py'),
          loc('requriements.txt')]),
        ({'bookmarks': ([[loc('../TROPOMI/OtherFiles/generateColorBar.py'),
                          {'attrib-starts': [],
                           'code-line': 'import matplotlib.pyplot as plt\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0,
                           'zoom': 0},
                          1583772324.510574],
                         [loc('../TROPOMI/OtherFiles/calculateStackedSectors.py'),
                          {'attrib-starts': [('process_file|0|',
        72)],
                           'code-line': '    start = time.time()\n',
                           'first-line': 43,
                           'folded-linenos': [],
                           'sel-line': 75,
                           'sel-line-start': 1956,
                           'selection_end': 1979,
                           'selection_start': 1979,
                           'zoom': 0},
                          1583772325.228616],
                         [loc('../TROPOMI/OtherFiles/calculateStackedSectors-failed.py'),
                          {'attrib-starts': [('transform_lat_lon|0|',
        44)],
                           'code-line': 'def transform_lat_lon(lat, lon, sector):\n',
                           'first-line': 26,
                           'folded-linenos': [],
                           'sel-line': 44,
                           'sel-line-start': 978,
                           'selection_end': 1018,
                           'selection_start': 1018,
                           'zoom': 0},
                          1583772325.755536],
                         [loc('../TROPOMI/OtherFiles/Download.py'),
                          {'attrib-starts': [],
                           'code-line': '',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0,
                           'zoom': 0},
                          1583772329.012967],
                         [loc('../../../../Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/multiprocessing/connection.py'),
                          {'attrib-starts': [('Connection|0|',
        347),
        ('Connection|0|._recv|0|',
         373)],
                           'code-line': '                    raise EOFError\n',
                           'first-line': 364,
                           'folded-linenos': [],
                           'sel-line': 382,
                           'sel-line-start': 11447,
                           'selection_end': 11447,
                           'selection_start': 11447,
                           'zoom': 0},
                          1583772330.166995],
                         [loc('../../Downloads/planet_thumbs-master/planet_thumbs.py'),
                          {'attrib-starts': [],
                           'code-line': '',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0,
                           'zoom': 0},
                          1584399071.850435],
                         [loc('../../../../Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/planet/api/dispatch.py'),
                          {'attrib-starts': [],
                           'code-line': '# Copyright 2015 Planet Labs, Inc.\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0,
                           'zoom': 0},
                          1584399074.6869],
                         [loc('../tropomi_download/wingdbstub.py'),
                          {'attrib-starts': [],
                           'code-line': 'Copyright (c) 1999-2018, Archaeopteryx Software, Inc.  All rights reserved.\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 3,
                           'sel-line-start': 149,
                           'selection_end': 224,
                           'selection_start': 224,
                           'zoom': 0},
                          1645487691.2256398],
                         [loc('../tropomi_download/VolcViewDebug.py'),
                          {'attrib-starts': [],
                           'code-line': 'import config\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0,
                           'zoom': 0},
                          1645487712.7381918],
                         [loc('../../../../Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/logging/__init__.py'),
                          {'attrib-starts': [('FileHandler|0|',
        1122),
        ('FileHandler|0|._open|0|',
         1169)],
                           'code-line': '        return open(self.baseFilename, self.mode, encoding=self.encoding,\n',
                           'first-line': 1146,
                           'folded-linenos': [],
                           'sel-line': 1174,
                           'sel-line-start': 41910,
                           'selection_end': 41910,
                           'selection_start': 41910,
                           'zoom': 0},
                          1645487763.399339],
                         [loc('../tropomi_download/VolcViewDebug.py'),
                          {'attrib-starts': [('DataFile|0|',
        271),
        ('DataFile|0|._generate_sector|0|',
         453)],
                           'code-line': '        (plot_item, scale_widget,\n',
                           'first-line': 636,
                           'folded-linenos': [],
                           'sel-line': 648,
                           'sel-line-start': 24719,
                           'selection_end': 24719,
                           'selection_start': 24719,
                           'zoom': 0},
                          1645487805.308821],
                         [loc('../../../../Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/os.py'),
                          {'attrib-starts': [('makedirs|0|',
        199)],
                           'code-line': '        mkdir(name, mode)\n',
                           'first-line': 196,
                           'folded-linenos': [],
                           'sel-line': 224,
                           'sel-line-start': 7396,
                           'selection_end': 7396,
                           'selection_start': 7396,
                           'zoom': 0},
                          1645487817.381804],
                         [loc('../tropomi_download/VolcViewDebug.py'),
                          {'attrib-starts': [('DataFile|0|',
        271),
        ('DataFile|0|._generate_sector|0|',
         453),
        ('DataFile|0|._generate_sector|0|.plot_dataset|0|',
         712)],
                           'code-line': '                os.makedirs(os.path.dirname(save_file), exist_ok = True)\n',
                           'first-line': 793,
                           'folded-linenos': [],
                           'sel-line': 813,
                           'sel-line-start': 31946,
                           'selection_end': 31946,
                           'selection_start': 31946,
                           'zoom': 0},
                          1645487840.4034429],
                         [loc('../tropomi_download/config.py'),
                          {'attrib-starts': [],
                           'code-line': 'FILE_BASE = "/Users/israel/Desktop/VIIRS"\n',
                           'first-line': 24,
                           'folded-linenos': [],
                           'sel-line': 29,
                           'sel-line-start': 798,
                           'selection_end': 838,
                           'selection_start': 838,
                           'zoom': 0},
                          1645488053.16627],
                         [loc('../tropomi_download/config.py'),
                          {'attrib-starts': [],
                           'code-line': 'FILE_BASE = "/Users/israel/Desktop/VIIRS"\n',
                           'first-line': 60,
                           'folded-linenos': [],
                           'sel-line': 29,
                           'sel-line-start': 798,
                           'selection_end': 838,
                           'selection_start': 838,
                           'zoom': 0},
                          1645488059.1036391],
                         [loc('../tropomi_download/config.py'),
                          {'attrib-starts': [],
                           'code-line': '     }\n',
                           'first-line': 152,
                           'folded-linenos': [],
                           'sel-line': 179,
                           'sel-line-start': 5209,
                           'selection_end': 5215,
                           'selection_start': 5215,
                           'zoom': 0},
                          1645488112.4344661],
                         [loc('../tropomi_download/VolcViewDebug.py'),
                          {'attrib-starts': [('DataFile|0|',
        271),
        ('DataFile|0|._generate_sector|0|',
         453),
        ('DataFile|0|._generate_sector|0|.plot_dataset|0|',
         712)],
                           'code-line': '            plot_item.getViewWidget().parent().grab()\n',
                           'first-line': 711,
                           'folded-linenos': [],
                           'sel-line': 729,
                           'sel-line-start': 28306,
                           'selection_end': 28306,
                           'selection_start': 28306,
                           'zoom': 0},
                          1647274881.640554],
                         [loc('../../../../Applications/Wing Pro.app/Contents/Resources/updates/8.2.0.0/doc/TOC'),
                          {'displayed-index': -1,
                           'viewer-state': {'history': [-1,
        0],
        'history-pos': 0,
        'index': -1,
        'top': 0,
        'top-left-pos': 0}},
                          1647276833.00254],
                         [loc('requriements.txt'),
                          {'attrib-starts': [],
                           'code-line': 'pymysql\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 5,
                           'sel-line-start': 45,
                           'selection_end': 45,
                           'selection_start': 45,
                           'zoom': 0},
                          1647283243.897408],
                         [loc('GraphGen.py'),
                          {'attrib-starts': [],
                           'code-line': 'import numpy\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 4,
                           'sel-line-start': 54,
                           'selection_end': 66,
                           'selection_start': 66,
                           'zoom': 0},
                          1647295128.7928278]],
                        20),
          'current-loc': loc('../../Downloads/plot_redoubtAZ.py'),
          'editor-state-list': [(loc('lib/python3.10/site-packages/pandas/core/arrays/datetimes.py'),
                                 {}),
                                (loc('lib/python3.10/site-packages/pandas/io/date_converters.py'),
                                 {}),
                                (loc('GraphGen.py'),
                                 {'attrib-starts': [],
                                  'code-line': 'import numpy\n',
                                  'first-line': 0,
                                  'folded-linenos': [],
                                  'sel-line': 4,
                                  'sel-line-start': 54,
                                  'selection_end': 66,
                                  'selection_start': 66,
                                  'zoom': 0}),
                                (loc('../../../../Applications/Wing Pro.app/Contents/Resources/updates/8.2.0.0/doc/TOC'),
                                 {'displayed-index': -1,
                                  'viewer-state': {'history': [-1,
        0],
        'history-pos': 0,
        'index': -1,
        'top': 0,
        'top-left-pos': 0}}),
                                (loc('../../Downloads/plot_redoubtAZ.py'),
                                 {'attrib-starts': [],
                                  'code-line': '    for num_tick in range(num_ticks):\n',
                                  'first-line': 81,
                                  'folded-linenos': [],
                                  'sel-line': 55,
                                  'sel-line-start': 2336,
                                  'selection_end': 2373,
                                  'selection_start': 2373,
                                  'zoom': 0}),
                                (loc('requriements.txt'),
                                 {'attrib-starts': [],
                                  'code-line': 'pymysql\n',
                                  'first-line': 0,
                                  'folded-linenos': [],
                                  'sel-line': 5,
                                  'sel-line-start': 45,
                                  'selection_end': 45,
                                  'selection_start': 45,
                                  'zoom': 0})],
          'has-focus': False,
          'locked': False},
         [loc('lib/python3.10/site-packages/pandas/core/arrays/datetimes.py'),
          loc('lib/python3.10/site-packages/pandas/io/date_converters.py'),
          loc('GraphGen.py'),
          loc('../../../../Applications/Wing Pro.app/Contents/Resources/updates/8.2.0.0/doc/TOC'),
          loc('../../Downloads/plot_redoubtAZ.py'),
          loc('requriements.txt')])),
                               'open_files': ['../../../../Applications/Wing Pro.app/Contents/Resources/updates/8.2.0.0/doc/TOC',
        'requriements.txt',
        '../../Downloads/plot_redoubtAZ.py',
        'GraphGen.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           0),
                          1647379973.27597),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1647275600.410966),
                 'user_data': {}},
        'window-alloc': (3367,
                         25,
                         2267,
                         1740)}]}
guimgr.recent-documents = [loc('GraphGen.py'),
                           loc('lib/python3.10/site-packages/pandas/core/arrays/datetimes.py'),
                           loc('lib/python3.10/site-packages/pandas/io/date_converters.py'),
                           loc('../../Downloads/plot_redoubtAZ.py'),
                           loc('requriements.txt')]
guimgr.visual-state = {loc('../../../../Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/_strptime.py'): {'attrib-starts': [('_calc_julian_from_V|0|',
        292)],
        'code-line': '    ordinal = (iso_week * 7) + iso_weekday - correction\n',
        'first-line': 288,
        'folded-linenos': [],
        'sel-line': 298,
        'sel-line-start': 13141,
        'selection_end': 13171,
        'selection_start': 13171,
        'zoom': 0},
                       loc('../PREVENTS_Test/requirements.txt'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('GraphGen.py'): {'attrib-starts': [('plot_color_code|0|',
        59)],
        'code-line': '\n',
        'first-line': 26,
        'folded-linenos': [],
        'sel-line': 79,
        'sel-line-start': 2163,
        'selection_end': 2163,
        'selection_start': 2163,
        'zoom': 0},
                       loc('lib/python3.10/site-packages/_plotly_utils/basevalidators.py'): {'attrib-starts': [('BaseValidator|0|',
        228),
        ('BaseValidator|0|.raise_invalid_val|0|',
         266)],
        'code-line': '\n',
        'first-line': 283,
        'folded-linenos': [],
        'sel-line': 292,
        'sel-line-start': 9389,
        'selection_end': 9389,
        'selection_start': 9389,
        'zoom': 0},
                       loc('lib/python3.10/site-packages/obspy/core/util/attribdict.py'): {'attrib-starts': [('AttribDict|0|',
        41),
        ('AttribDict|0|.__getitem__|0|',
         94)],
        'code-line': '            return self.__dict__[name]\n',
        'first-line': 79,
        'folded-linenos': [],
        'sel-line': 96,
        'sel-line-start': 2775,
        'selection_end': 2813,
        'selection_start': 2813,
        'zoom': 0},
                       loc('lib/python3.10/site-packages/pandas/core/common.py'): {'attrib-starts': [('temp_setattr|0|',
        534)],
        'code-line': '        value: Value to temporarily set attribute to.\n',
        'first-line': 504,
        'folded-linenos': [],
        'sel-line': 540,
        'sel-line-start': 14888,
        'selection_end': 14940,
        'selection_start': 14940,
        'zoom': 0},
                       loc('lib/python3.10/site-packages/pandas/core/generic.py'): {'attrib-starts': [('NDFrame|0|',
        197),
        ('NDFrame|0|.__getattr__|0|',
         5568)],
        'code-line': '        return object.__getattribute__(self, name)\n',
        'first-line': 5518,
        'folded-linenos': [],
        'sel-line': 5582,
        'sel-line-start': 187447,
        'selection_end': 187447,
        'selection_start': 187447,
        'zoom': 0},
                       loc('lib/python3.10/site-packages/pandas/core/indexes/accessors.py'): {'attrib-starts': [('PeriodProperties|0|',
        414)],
        'code-line': '    0    0\n',
        'first-line': 444,
        'folded-linenos': [],
        'sel-line': 451,
        'sel-line-start': 12941,
        'selection_end': 12951,
        'selection_start': 12951,
        'zoom': 0},
                       loc('lib/python3.10/site-packages/pandas/core/indexes/base.py'): {'attrib-starts': [('Index|0|',
        260),
        ('Index|0|.get_loc|0|',
         3576)],
        'code-line': '            * nearest: use the NEAREST index value if no exact match. Tied\n',
        'first-line': 3570,
        'folded-linenos': [],
        'sel-line': 3587,
        'sel-line-start': 115856,
        'selection_end': 115930,
        'selection_start': 115930,
        'zoom': 0},
                       loc('lib/python3.10/site-packages/pandas/core/internals/construction.py'): {'attrib-starts': [('ndarray_to_mgr|0|',
        273)],
        'code-line': '\n',
        'first-line': 357,
        'folded-linenos': [],
        'sel-line': 375,
        'sel-line-start': 11239,
        'selection_end': 11239,
        'selection_start': 11239,
        'zoom': 0},
                       loc('lib/python3.10/site-packages/plotly/basedatatypes.py'): {'attrib-starts': [('BasePlotlyType|0|',
        4213),
        ('BasePlotlyType|0|.plotly_name|0|',
         4352)],
        'code-line': '        str\n',
        'first-line': 4339,
        'folded-linenos': [],
        'sel-line': 4358,
        'sel-line-start': 161578,
        'selection_end': 161589,
        'selection_start': 161589,
        'zoom': 0},
                       loc('lib/python3.10/site-packages/plotly/express/_core.py'): {'attrib-starts': [('process_args_into_dataframe|0|',
        1075)],
        'code-line': '            if isinstance(argument, Constant) or isinstance(argument, Range):\n',
        'first-line': 1142,
        'folded-linenos': [],
        'sel-line': 1153,
        'sel-line-start': 44526,
        'selection_end': 44580,
        'selection_start': 44580,
        'zoom': 0}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [''])}
proj.pyexec = {None: ('activate',
                      '/Users/israel/Development/PREVENTS/bin/activate')}
proj.vcs-system-config = ('prefs',
                          {'cvs': {'versioncontrol.cvs.active': 'active-if-project-dir',
                                   'versioncontrol.cvs.executable': 'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-z3'},
                           'git': {'versioncontrol.git.active': 'active-if-project-dir',
                                   'versioncontrol.git.executable': 'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-project-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': 'hg',
                                  'versioncontrol.hg.extra-global-args': '--encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'not-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': 'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-project-dir',
                                   'versioncontrol.svn.executable': 'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': 'svnadmin'}})
testing.stored-results = (1,
                          [],
                          {})
